---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o k8s
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
  selector:
    io.kompose.service: grafana

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o k8s
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: prometheus
  name: prometheus
spec:
  ports:
    - name: "9090"
      port: 9090
      targetPort: 9090
  selector:
    io.kompose.service: prometheus

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o k8s
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o k8s
        kompose.version: 1.35.0 (HEAD)
      labels:
        io.kompose.service: grafana
    spec:
      containers:
        - image: grafana
          name: grafana
          ports:
            - containerPort: 3000
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o k8s
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: prometheus
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: prometheus
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o k8s
        kompose.version: 1.35.0 (HEAD)
      labels:
        io.kompose.service: prometheus
    spec:
      containers:
        - image: prometheus
          name: prometheus
          ports:
            - containerPort: 9090
              protocol: TCP
      restartPolicy: Always

